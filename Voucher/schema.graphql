type ListingPriceUpdated @entity(immutable: true) {
  id: Bytes!
  newPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoucherCreated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  creator: Bytes! # address
  tokenURI: String! # string
  price: BigInt! # uint256
  discountValue: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoucherReselled @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  seller: Bytes! # address
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoucherSold @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  buyer: Bytes! # address
  seller: Bytes! # address
  price: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoucherUsed @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  user: Bytes! # address
  discountValue: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
